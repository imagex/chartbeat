<?php
/**
 * @file
 * The main module file.
 *
 * Contains menu, permission, init, and page alter hook implementations.
 */


/**
 * Implements of hook_menu().
 */
function chartbeat_menu() {
  $items['admin/config/system/chartbeat'] = array(
    'title' => 'Chartbeat',
    'description' => 'Change the setting configuration when using Chartbeat.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('chartbeat_admin_settings'),
    'access arguments' => array('administer chartbeat settings'),
    'file' => 'chartbeat.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function chartbeat_permission() {
  return array(
    'administer chartbeat settings' => array(
      'title' => t('Administer Chartbeat settings'),
    ),
  );
}

/**
 * Implementation of hook_init().
 */
function chartbeat_init() {
  $uid = variable_get('chartbeat_uid', '');
  $canonical = variable_get('chartbeat_use_canonical', '0');
  $canonical = !empty($canonical) ? TRUE : FALSE;

  $cookies = variable_get('chartbeat_cookies', '0');
  $cookies = !empty($cookies) ? FALSE : TRUE;

  if (is_numeric($uid)) {
    // Add the header script to start the timer.
    drupal_add_html_head(array(
      '#tag' => 'script',
      '#attributes' => array('type' => 'text/javascript'),
      '#value' => 'var _sf_startpt=(new Date()).getTime();',
    ), 'chartbeat');
    // Inject the Chartbeat settings.
    drupal_add_js(array('chartbeat' => array(
      'uid' => (int)$uid,
      'domain' => variable_get('chartbeat_domain', ''),
      'useCanonical' => $canonical,
      'noCookies' => $cookies,
    )), 'setting');
  }
}

function chartbeat_form_node_admin_content_alter(&$form, &$form_state) {
  $form['admin']['nodes']['#header']['concurrent'] = array(
    'data' => 'Concurrent Views',
    'field' => '',
  );

  $api = variable_get('chartbeat_api_key', FALSE);

  foreach($form['admin']['nodes']['#options'] as &$node) {

    $href = $node['title']['data']['#href'];

    if ($api) {
      $host = $_SERVER['SERVER_NAME'];
      $req_http = "http://api.chartbeat.com/live/summary/v3/?apikey=$api&host=$host&keys=read&path=/$href";
      $resp = drupal_http_request($req_http);

      if ($resp->code == 200) {
        $response = json_decode($resp->data, true);
        if (!empty($response)) {
          $num = (int)$response['read']['data']['sum'];
          $node['concurrent'] = $num;
        } else {
          $node['concurrent'] = 0;
        }
      } else {
        $node['concurrent'] = 'n/a';
      }
    }
    else {
      $node['concurrent'] = 'n/a';
    }
  }
}

/**
 * Implements hook_block_info().
 *
 */
function chartbeat_block_info() {

  $blocks['chartbeat-dashboard'] = array(
    'info' => t('Chartbeat dashboard iframe'),
    'cache' => DRUPAL_NO_CACHE,
    'properties' => array(
      'administrative' => TRUE,
    ),
    'weight' => 10,
    'status' => TRUE,
    'region' => 'dashboard_main',
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function chartbeat_block_view($delta = '') {
  $block = array();
  switch($delta) {
    case 'chartbeat-dashboard':
      $block['subject'] = t('Chartbeat Dashboard');
      $block['content'] = _chartbeat_dashboard_view();
      break;
  }

  return $block;
}

function _chartbeat_dashboard_view() {
  $api = variable_get('chartbeat_api_key', FALSE);

  if ($api) {
    $content = array(
      '#theme' => 'table',
      'header' => array(
        'URL', 'Visitors',
      ),
      'rows' => array(),
    );

    $host = $_SERVER['SERVER_NAME'];
    $req_http = "http://api.chartbeat.com/live/toppages/v3/?apikey=$api&host=$host&keys=read&path=/$href";
    $resp = drupal_http_request($req_http);

    if ($resp->code == 200) {
      $response = json_decode($resp->data, true);
      if (!empty($response)) {
        foreach ($response['pages'] as $page) {
          $content['rows'][] = array($page['path'],
            $page['path']['stats']['people']);
        }
      }
    }
  } else {
    $content = array(
      '#type' => 'markup',
      '#markup' => 'Pages cannot be retrieved at this time.',
    );
  }
  return $content;
}

function chartbeat_block_list_alter(&$blocks) {
  foreach ($blocks as $bid => $block) {
    if (($block->module == 'chartbeat') && ($block->delta == "chartbeat_dashboard")) {
      unset($blocks[$bid]);
      break;
    }
  }
}

/**
 * Implements hook_page_alter().
 */
function chartbeat_page_alter(&$page) {
  $uid = variable_get('chartbeat_uid', '');
  if (!empty($uid)) {
    // Make sure we're outputting a user ID instead of a user name.
    if (!is_numeric($uid)) {
      drupal_set_message(t('Your <em>Chartbeat User ID</em> must be a number. You can locate it within step two of adding a new website to track at <a href="@chartbeat">Chartbeat</a>.', array('@chartbeat' => 'http://chartbeat.com')), 'warning', FALSE);
      return;
    }
    $output = <<<EOT
<script type="text/javascript">
  var _sf_async_config=Drupal.settings.chartbeat;
  (function(){
    function loadChartbeat() {
      window._sf_endpt=(new Date()).getTime();
      var e = document.createElement('script');
      e.setAttribute('language', 'javascript');
      e.setAttribute('type', 'text/javascript');
      e.setAttribute('src',
         (("https:" == document.location.protocol) ? "https://s3.amazonaws.com/" : "http://") +
         "static.chartbeat.com/js/chartbeat.js");
      document.body.appendChild(e);
    }
    var oldonload = window.onload;
    window.onload = (typeof window.onload != 'function') ?
       loadChartbeat : function() { oldonload(); loadChartbeat(); };
  })();
</script>
EOT;
    $page['page_bottom']['chartbeat'] = array('#markup' => $output);
  }
}
